"""
This type stub file was generated by pyright.
"""

def statement_factory(dialect): # -> (sql: Unknown, *args: Unknown, **kwargs: Unknown) -> Statement:
    """Creates a sanitizer for ``dialect`` and injects it into ``Statement``, exposing a simpler
    interface for ``Statement``.

    :param dialect: a SQLAlchemy dialect
    :type dialect: :class:`sqlalchemy.engine.Dialect`
    """
    ...

class Statement:
    """Parses a SQL statement and substitutes any parameter markers with their corresponding
    placeholders.
    """
    def __init__(self, sql_sanitizer, sql, *args, **kwargs) -> None:
        """
        :param sql_sanitizer: The SQL sanitizer used to sanitize the parameters
        :type sql_sanitizer: :class:`_sql_sanitizer.SQLSanitizer`

        :param sql: The SQL statement
        :type sql: str

        :param *args: Zero or more positional parameters to be substituted for the parameter markers

        :param *kwargs: Zero or more keyword arguments to be substituted for the parameter markers
        """
        ...
    
    def is_transaction_start(self): # -> bool:
        ...
    
    def is_transaction_end(self): # -> bool:
        ...
    
    def is_delete(self): # -> Any:
        ...
    
    def is_insert(self): # -> Any:
        ...
    
    def is_select(self): # -> Any:
        ...
    
    def is_update(self): # -> Any:
        ...
    
    def __str__(self) -> str:
        """Joins the statement tokens into a string.
        """
        ...
    


