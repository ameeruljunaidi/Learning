"""
This type stub file was generated by pyright.
"""

import enum

"""Utility functions used by _statement.py.
"""
operation_keywords = ...
class Paramstyle(enum.Enum):
    """Represents the supported parameter marker styles.
    """
    FORMAT = ...
    NAMED = ...
    NUMERIC = ...
    PYFORMAT = ...
    QMARK = ...


def format_and_parse(sql): # -> Statement:
    """Formats and parses a SQL statement. Raises ``RuntimeError`` if ``sql`` represents more than
    one statement.

    :param sql: The SQL statement to be formatted and parsed
    :type sql: str

    :returns: A list of unflattened SQLParse tokens that represent the parsed statement
    """
    ...

def is_placeholder(ttype):
    ...

def parse_placeholder(value): # -> tuple[Literal[Paramstyle.QMARK], None] | tuple[Literal[Paramstyle.NUMERIC], int] | tuple[Literal[Paramstyle.NAMED], str | Any] | tuple[Literal[Paramstyle.FORMAT], None] | tuple[Literal[Paramstyle.PYFORMAT], str | Any]:
    """
    :returns: A tuple of the paramstyle and the name of the parameter marker (if any) or ``None``
    :rtype: tuple
    """
    ...

def is_operation_token(ttype): # -> bool:
    ...

def is_string_literal(ttype): # -> bool:
    ...

def is_identifier(ttype):
    ...

def get_human_readable_list(iterable): # -> str:
    ...

