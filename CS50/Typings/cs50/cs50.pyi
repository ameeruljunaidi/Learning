"""
This type stub file was generated by pyright.
"""

"""Exposes simple API for getting and validating user input"""
def get_float(prompt): # -> float | None:
    """Reads a line of text from standard input and returns the equivalent float as precisely as
    possible; if text does not represent a float, user is prompted to retry. If line can't be read,
    returns None.

    :type prompt: str

    """
    ...

def get_int(prompt): # -> int | None:
    """Reads a line of text from standard input and return the equivalent int; if text does not
    represent an int, user is prompted to retry. If line can't be read, returns None.

    :type prompt: str
    """
    ...

def get_string(prompt): # -> str | None:
    """Reads a line of text from standard input and returns it as a string, sans trailing line
    ending. Supports CR (\r), LF (\n), and CRLF (\r\n) as line endings. If user inputs only a line
    ending, returns "", not None.  Returns None upon error or no input whatsoever (i.e., just EOF).

    :type prompt: str
    """
    ...

class _flushfile:
    """ Disable buffering for standard output and standard error.
    http://stackoverflow.com/a/231216
    """
    def __init__(self, stream) -> None:
        ...
    
    def __getattr__(self, name): # -> Any:
        ...
    
    def write(self, data): # -> None:
        """Writes data to stream"""
        ...
    


def disable_output_buffering(): # -> None:
    """Disables output buffering to prevent prompts from being buffered.
    """
    ...

