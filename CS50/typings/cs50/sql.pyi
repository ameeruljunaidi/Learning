"""
This type stub file was generated by pyright.
"""

_logger = ...
class SQL:
    """An API for executing SQL Statements.
    """
    def __init__(self, url) -> None:
        """
        :param url: The database URL
        """
        ...
    
    def execute(self, sql, *args, **kwargs): # -> list[dict[Unknown, Unknown]] | Any | Literal[True] | None:
        """Executes a SQL statement.

        :param sql: a SQL statement, possibly with parameters markers
        :type sql: str
        :param *args: zero or more positional arguments to substitute the parameter markers with
        :param **kwargs: zero or more keyword arguments to substitute the parameter markers with

        :returns: For ``SELECT``, a :py:class:`list` of :py:class:`dict` objects, each of which
        represents a row in the result set; for ``INSERT``, the primary key of a newly inserted row
        (or ``None`` if none); for ``UPDATE``, the number of rows updated; for ``DELETE``, the
        number of rows deleted; for other statements, ``True``; on integrity errors, a
        :py:class:`ValueError` is raised, on other errors, a :py:class:`RuntimeError` is raised

        """
        ...
    
    def init_app(self, app): # -> None:
        """Enables logging and registers a ``teardown_appcontext`` listener to remove the session.

        :param app: a Flask application instance
        :type app: :class:`flask.Flask`
        """
        ...
    


